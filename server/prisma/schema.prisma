generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String         @id @unique @default(uuid())
  username      String         @unique
  avatar        String         @default("https://avatars.dicebear.com/api/bottts/1.svg")
  gameId        String?
  role          String         @default("Staff")
  contributions Contribution[]  
  scores        Score[]
  Game          Game?          @relation(fields: [gameId], references: [id])
  Room          Room[]         @relation("RoomToUser")
}

model Room {
  id        String   @id @unique @default(uuid())
  name      String   @unique
  code      String   @unique
  createdAt DateTime @default(now())
  gameId    String?
  game      Game?    @relation(fields: [gameId], references: [id])
  users     User[]   @relation("RoomToUser")
  contributions Contribution[]
}

model Game {
  id            String         @id @unique @default(uuid())
  isActive      Boolean        @default(true)
  createdAt     DateTime       @default(now())
  name          String
  gameImage     String?
  Room          Room[]         // One game can have many rooms
  contributions Contribution[]
  scores        Score[]
  users         User[]         // Users associated with this game
}

model Contribution {
  id             String          @id @default(uuid())
  userId         String
  user           User            @relation(fields: [userId], references: [id])
  gameId         String
  game           Game            @relation(fields: [gameId], references: [id])
  type           ContributionType
  content        String          // Word, drawing (URL), or guessed word
  targetUserId   String?         // The player who receives the word/drawing
  originalWordId String?         // References the first-round word
  originalWord   Contribution?   @relation("OriginalWord", fields: [originalWordId], references: [id])
  guesses        Contribution[]  @relation("OriginalWord")
  createdAt      DateTime        @default(now())
  room           Room            @relation(fields: [roomId], references: [id])
  roomId         String
}


model Score {
  id        String   @id @unique @default(uuid())
  userId    String
  gameId    String
  points    Int      @default(0)
  createdAt DateTime @default(now())
  game      Game     @relation(fields: [gameId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
}

enum ContributionType {
  WORD
  DRAWING
  GUESS
}
